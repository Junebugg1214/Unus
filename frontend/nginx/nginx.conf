# Worker configuration
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    multi_accept on;
    worker_connections 65535;
}

http {
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    log_not_found off;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # MIME types
    include mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /dev/stdout combined buffer=512k flush=1s;
    error_log /dev/stderr warn;

    server {
        listen 80;
        server_name your-domain.com;
        return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;
        server_name your-domain.com;

        # SSL Certificates
        ssl_certificate /etc/nginx/ssl/cert.pem;        # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/ssl/key.pem;    # Path to your SSL key

        # SSL Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Root directory for static files (React build)
        root /usr/share/nginx/html;
        index index.html;

        # Serve the frontend React app
        location / {
            try_files $uri $uri/ /index.html;

            # Security headers
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header Content-Security-Policy "default-src 'self'; connect-src 'self' http: https:; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;
        }

        # Proxy requests to the backend API server
        location /api/ {
            limit_req zone=api_limit burst=10 nodelay;

            # Remove /api/ prefix when forwarding to backend
            rewrite ^/api/(.*) /$1 break;

            proxy_pass http://localhost:5000;  # Proxy to Gunicorn running the backend on port 5000
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Caching for static files
        location ~* \.(jpg|jpeg|png|gif|ico|webp|svg)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
            try_files $uri =404;
        }

        location ~* \.(css|js)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
            try_files $uri =404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 'healthy\n';
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}


