{"ast":null,"code":"import process from'process';const loadEnv=()=>{// Set default to 'development' if NODE_ENV is not set\nconst nodeEnv=process.env['NODE_ENV']||'development';console.log(`Environment: ${nodeEnv}`);// Verify essential environment variables\nconst requiredEnvVars=['REACT_APP_API_URL','REACT_APP_API_TIMEOUT','REACT_APP_TOKEN_EXPIRY_DAYS'];// Log an error if a required environment variable is missing\nrequiredEnvVars.forEach(envVar=>{if(!process.env[envVar]){console.error(`Warning: Missing required environment variable: ${envVar}`);}});// Optionally, throw an error if critical variables are missing\nconst missingEnvVars=requiredEnvVars.filter(envVar=>!process.env[envVar]);if(missingEnvVars.length>0){throw new Error(`Critical Error: Missing required environment variables: ${missingEnvVars.join(', ')}`);}};// Load environment configuration\nloadEnv();export default loadEnv;","map":{"version":3,"names":["process","loadEnv","nodeEnv","env","console","log","requiredEnvVars","forEach","envVar","error","missingEnvVars","filter","length","Error","join"],"sources":["C:/Users/marcs/unus/frontend/src/env.ts"],"sourcesContent":["import process from 'process';\r\n\r\nconst loadEnv = (): void => {\r\n  // Set default to 'development' if NODE_ENV is not set\r\n  const nodeEnv = process.env['NODE_ENV'] || 'development';\r\n  console.log(`Environment: ${nodeEnv}`);\r\n\r\n  // Verify essential environment variables\r\n  const requiredEnvVars = [\r\n    'REACT_APP_API_URL', \r\n    'REACT_APP_API_TIMEOUT', \r\n    'REACT_APP_TOKEN_EXPIRY_DAYS'\r\n  ] as const;\r\n\r\n  // Log an error if a required environment variable is missing\r\n  requiredEnvVars.forEach((envVar) => {\r\n    if (!process.env[envVar]) {\r\n      console.error(`Warning: Missing required environment variable: ${envVar}`);\r\n    }\r\n  });\r\n\r\n  // Optionally, throw an error if critical variables are missing\r\n  const missingEnvVars = requiredEnvVars.filter((envVar) => !process.env[envVar]);\r\n  if (missingEnvVars.length > 0) {\r\n    throw new Error(\r\n      `Critical Error: Missing required environment variables: ${missingEnvVars.join(', ')}`\r\n    );\r\n  }\r\n};\r\n\r\n// Load environment configuration\r\nloadEnv();\r\n\r\nexport default loadEnv;\r\n"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,SAAS,CAE7B,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAY,CAC1B;AACA,KAAM,CAAAC,OAAO,CAAGF,OAAO,CAACG,GAAG,CAAC,UAAU,CAAC,EAAI,aAAa,CACxDC,OAAO,CAACC,GAAG,CAAC,gBAAgBH,OAAO,EAAE,CAAC,CAEtC;AACA,KAAM,CAAAI,eAAe,CAAG,CACtB,mBAAmB,CACnB,uBAAuB,CACvB,6BAA6B,CACrB,CAEV;AACAA,eAAe,CAACC,OAAO,CAAEC,MAAM,EAAK,CAClC,GAAI,CAACR,OAAO,CAACG,GAAG,CAACK,MAAM,CAAC,CAAE,CACxBJ,OAAO,CAACK,KAAK,CAAC,mDAAmDD,MAAM,EAAE,CAAC,CAC5E,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAE,cAAc,CAAGJ,eAAe,CAACK,MAAM,CAAEH,MAAM,EAAK,CAACR,OAAO,CAACG,GAAG,CAACK,MAAM,CAAC,CAAC,CAC/E,GAAIE,cAAc,CAACE,MAAM,CAAG,CAAC,CAAE,CAC7B,KAAM,IAAI,CAAAC,KAAK,CACb,2DAA2DH,cAAc,CAACI,IAAI,CAAC,IAAI,CAAC,EACtF,CAAC,CACH,CACF,CAAC,CAED;AACAb,OAAO,CAAC,CAAC,CAET,cAAe,CAAAA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}