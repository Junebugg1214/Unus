{"ast":null,"code":"import _extends from \"C:/Users/marcs/unus/frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\marcs\\\\unus\\\\frontend\\\\src\\\\components\\\\ui\\\\button.tsx\";\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva } from \"class-variance-authority\";\nimport { cn } from \"../../lib/utils\";\n\n// Define the props interface for the Button component\n\nconst buttonVariants = cva(\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\", {\n  variants: {\n    variant: {\n      default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n      destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n      outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n      secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n      ghost: \"hover:bg-accent hover:text-accent-foreground\",\n      link: \"text-primary underline-offset-4 hover:underline\",\n      success: \"bg-green-500 text-white hover:bg-green-600\",\n      danger: \"bg-red-500 text-white hover:bg-red-600\"\n    },\n    size: {\n      default: \"h-10 px-4 py-2\",\n      sm: \"h-9 rounded-md px-3\",\n      lg: \"h-11 rounded-md px-8\",\n      icon: \"h-10 w-10\"\n    }\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"default\"\n  }\n});\nconst spinnerColorClasses = {\n  default: \"text-primary\",\n  destructive: \"text-red-500\",\n  outline: \"text-gray-500\",\n  secondary: \"text-secondary\",\n  ghost: \"text-accent\",\n  link: \"text-primary\",\n  success: \"text-green-500\",\n  danger: \"text-red-500\"\n};\nconst LoadingSpinner = ({\n  variant = 'default'\n}) => {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: `animate-spin h-5 w-5 mr-2 ${spinnerColorClasses[variant]}`,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"opacity-25\",\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    stroke: \"currentColor\",\n    strokeWidth: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"opacity-75\",\n    fill: \"currentColor\",\n    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n};\n_c = LoadingSpinner;\nconst Button = /*#__PURE__*/React.forwardRef(_c2 = ({\n  className,\n  variant = 'default',\n  size = 'default',\n  asChild = false,\n  isLoading = false,\n  children,\n  ...props\n}, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n  return /*#__PURE__*/React.createElement(Comp, _extends({\n    className: cn(buttonVariants({\n      variant,\n      size,\n      className\n    }), isLoading && \"cursor-wait\"),\n    ref: ref,\n    disabled: props.disabled || isLoading,\n    \"aria-busy\": isLoading\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"flex items-center justify-center\",\n    \"aria-live\": \"polite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    variant: variant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), \"Loading...\") : children);\n});\n_c3 = Button;\nButton.displayName = \"Button\";\nexport { Button, buttonVariants };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"Button$React.forwardRef\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"names":["React","Slot","cva","cn","buttonVariants","variants","variant","default","destructive","outline","secondary","ghost","link","success","danger","size","sm","lg","icon","defaultVariants","spinnerColorClasses","LoadingSpinner","createElement","className","xmlns","fill","viewBox","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","stroke","strokeWidth","d","_c","Button","forwardRef","_c2","asChild","isLoading","children","props","ref","Comp","_extends","disabled","_c3","displayName","$RefreshReg$"],"sources":["C:/Users/marcs/unus/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport { cn } from \"../../lib/utils\"\r\n\r\n// Define the props interface for the Button component\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className?: string;\r\n  variant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link' | 'success' | 'danger';\r\n  size?: 'default' | 'sm' | 'lg' | 'icon';\r\n  asChild?: boolean;\r\n  isLoading?: boolean;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n        success: \"bg-green-500 text-white hover:bg-green-600\",\r\n        danger: \"bg-red-500 text-white hover:bg-red-600\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nconst spinnerColorClasses: Record<'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link' | 'success' | 'danger', string> = {\r\n  default: \"text-primary\",\r\n  destructive: \"text-red-500\",\r\n  outline: \"text-gray-500\",\r\n  secondary: \"text-secondary\",\r\n  ghost: \"text-accent\",\r\n  link: \"text-primary\",\r\n  success: \"text-green-500\",\r\n  danger: \"text-red-500\",\r\n};\r\n\r\nconst LoadingSpinner: React.FC<{ variant?: keyof typeof spinnerColorClasses }> = ({ variant = 'default' }) => {\r\n  return (\r\n    <svg\r\n      className={`animate-spin h-5 w-5 mr-2 ${spinnerColorClasses[variant]}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <circle\r\n        className=\"opacity-25\"\r\n        cx=\"12\"\r\n        cy=\"12\"\r\n        r=\"10\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"4\"\r\n      ></circle>\r\n      <path\r\n        className=\"opacity-75\"\r\n        fill=\"currentColor\"\r\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({\r\n  className,\r\n  variant = 'default',\r\n  size = 'default',\r\n  asChild = false,\r\n  isLoading = false,\r\n  children,\r\n  ...props\r\n}, ref) => {\r\n  const Comp = asChild ? Slot : \"button\";\r\n\r\n  return (\r\n    <Comp\r\n      className={cn(buttonVariants({ variant, size, className }), isLoading && \"cursor-wait\")}\r\n      ref={ref}\r\n      disabled={props.disabled || isLoading}\r\n      aria-busy={isLoading}\r\n      {...props}\r\n    >\r\n      {isLoading ? (\r\n        <span className=\"flex items-center justify-center\" aria-live=\"polite\">\r\n          <LoadingSpinner variant={variant} />\r\n          Loading...\r\n        </span>\r\n      ) : (\r\n        children\r\n      )}\r\n    </Comp>\r\n  );\r\n});\r\n\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}