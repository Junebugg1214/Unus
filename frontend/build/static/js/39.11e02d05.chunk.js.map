{"version":3,"file":"static/js/39.11e02d05.chunk.js","mappings":"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","sources":["components/HomePage.jsx","utils/validation.js","components/ManageReposPage.jsx","components/ui/textarea.jsx","components/InferencePage.jsx","components/UnusApp.jsx","components/ui/card.jsx","components/ui/input.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, CardHeader, CardContent } from './ui/card';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { validateRepoUrl } from '../utils/validation';\r\n\r\nconst HomePage = ({ user, onCloneRepo }) => {\r\n  const [githubUrl, setGithubUrl] = useState('');\r\n\r\n  const handleClone = () => {\r\n    const urlError = validateRepoUrl(githubUrl);\r\n    if (urlError) {\r\n      // You might want to add a way to show errors here, perhaps by passing a showAlert function from the parent\r\n      return;\r\n    }\r\n    onCloneRepo(githubUrl);\r\n    setGithubUrl('');\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-3xl mx-auto\">\r\n      <CardHeader>\r\n        <h2 className=\"text-2xl font-bold\">Welcome to Unus</h2>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p className=\"mb-4\">Unus is an AI Agent Management Platform. Clone repositories, manage them, and run inferences with ease.</p>\r\n        {user ? (\r\n          <div className=\"space-y-4\">\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Paste Agent GitHub URL\"\r\n              value={githubUrl}\r\n              onChange={(e) => setGithubUrl(e.target.value)}\r\n            />\r\n            <Button onClick={handleClone}>Clone Repository</Button>\r\n          </div>\r\n        ) : (\r\n          <p>Please log in or register to start using Unus.</p>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// File: src/utils/validation.js\r\n\r\nexport const validateUsername = (username) => {\r\n  if (typeof username !== 'string' || username.length < 3 || username.length > 50) {\r\n    return 'Username must be between 3 and 50 characters.';\r\n  }\r\n  if (!/^[a-zA-Z0-9_]+$/.test(username)) {\r\n    return 'Username can only contain letters, numbers, and underscores.';\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const validateEmail = (email) => {\r\n  const emailRegex = /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n  if (!emailRegex.test(email)) {\r\n    return 'Invalid email address.';\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const validatePassword = (password) => {\r\n  if (password.length < 8) {\r\n    return 'Password must be at least 8 characters long.';\r\n  }\r\n  if (!/[A-Z]/.test(password) || !/[0-9]/.test(password)) {\r\n    return 'Password must contain at least one uppercase letter and one number.';\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const validateConfirmPassword = (password, confirmPassword) => {\r\n  if (password !== confirmPassword) {\r\n    return 'Passwords do not match.';\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const validateRepoUrl = (url) => {\r\n  const urlRegex = /^https:\\/\\/github\\.com\\/[\\w-]+\\/[\\w-]+(\\.git)?$/;\r\n  if (!urlRegex.test(url)) {\r\n    return 'Invalid GitHub repository URL.';\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const validateInputText = (inputText) => {\r\n  if (inputText.length > 500) {\r\n    return 'Input text must be less than 500 characters.';\r\n  }\r\n  const disallowedCharacters = /[<>$;]/;\r\n  if (disallowedCharacters.test(inputText)) {\r\n    return 'Input text contains disallowed characters.';\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const validateInferenceText = (text) => {\r\n  if (!text.trim()) {\r\n    return \"Inference text cannot be empty\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const validateForm = (formData, validationRules) => {\r\n  const errors = {};\r\n  \r\n  for (const [field, validate] of Object.entries(validationRules)) {\r\n    const error = validate(formData[field]);\r\n    if (error) {\r\n      errors[field] = error;\r\n    }\r\n  }\r\n  \r\n  return errors;\r\n};\r\n","import React from 'react';\r\nimport { Card, CardHeader, CardContent } from './ui/card';\r\nimport { Button } from './ui/button';\r\n\r\nconst ManageReposPage = ({ repos, onDeleteRepo }) => {\r\n  return (\r\n    <Card className=\"w-full max-w-3xl mx-auto\">\r\n      <CardHeader>\r\n        <h2 className=\"text-2xl font-bold\">Manage Repositories</h2>\r\n      </CardHeader>\r\n      <CardContent>\r\n        {repos.length > 0 ? (\r\n          <ul className=\"space-y-2\">\r\n            {repos.map((repo) => (\r\n              <li key={repo} className=\"flex justify-between items-center p-2 bg-gray-100 rounded\">\r\n                <span>{repo}</span>\r\n                <Button variant=\"destructive\" size=\"sm\" onClick={() => onDeleteRepo(repo)}>\r\n                  Delete\r\n                </Button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No repositories cloned yet.</p>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ManageReposPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { cn } from '../../lib/utils';  // Adjust this path if necessary\r\n\r\nconst Textarea = React.forwardRef(({ className, ...props }, ref) => (\r\n  <textarea\r\n    className={cn(\r\n      \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\r\n      className\r\n    )}\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n));\r\n\r\nTextarea.displayName = 'Textarea';\r\n\r\nTextarea.propTypes = {\r\n  className: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport { Textarea };\r\n","import React, { useState } from 'react';\r\nimport { Card, CardHeader, CardContent, CardFooter } from './ui/card';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Textarea } from './ui/textarea';\r\nimport { validateInferenceText } from '../utils/validation';\r\nimport api from '../lib/api';\r\n\r\nconst InferencePage = ({ repos, showAlert }) => {\r\n  const [selectedRepo, setSelectedRepo] = useState('');\r\n  const [inferenceText, setInferenceText] = useState('');\r\n  const [inferenceFile, setInferenceFile] = useState(null);\r\n  const [output, setOutput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleRunInference = async () => {\r\n    if (!selectedRepo) {\r\n      showAlert('Please select a repository', 'destructive');\r\n      return;\r\n    }\r\n    if (!inferenceText.trim() && !inferenceFile) {\r\n      showAlert('Please enter text or upload a file for inference', 'destructive');\r\n      return;\r\n    }\r\n    \r\n    const textError = validateInferenceText(inferenceText);\r\n    if (textError) {\r\n      showAlert(textError, 'destructive');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const taskId = await api.runInference(selectedRepo, inferenceText, inferenceFile);\r\n      showAlert('Inference task started', 'default');\r\n      await checkTaskStatus(taskId);\r\n    } catch (error) {\r\n      showAlert('Failed to start inference', 'destructive');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const checkTaskStatus = async (taskId) => {\r\n    try {\r\n      const result = await api.getTaskStatus(taskId);\r\n      if (result.state === 'PENDING' || result.state === 'STARTED') {\r\n        setTimeout(() => checkTaskStatus(taskId), 2000);\r\n      } else if (result.state === 'SUCCESS') {\r\n        setOutput(result.result);\r\n        showAlert('Inference completed', 'default');\r\n      } else if (result.state === 'FAILURE') {\r\n        showAlert('Inference failed', 'destructive');\r\n      }\r\n    } catch (error) {\r\n      showAlert('Error checking task status', 'destructive');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-3xl mx-auto\">\r\n      <CardHeader>\r\n        <h2 className=\"text-2xl font-bold\">Run Inference</h2>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          <select\r\n            value={selectedRepo}\r\n            onChange={(e) => setSelectedRepo(e.target.value)}\r\n            className=\"w-full p-2 border rounded\"\r\n          >\r\n            <option value=\"\">Select a repository</option>\r\n            {repos.map((repo) => (\r\n              <option key={repo} value={repo}>{repo}</option>\r\n            ))}\r\n          </select>\r\n          <Textarea\r\n            placeholder=\"Enter text for inference\"\r\n            value={inferenceText}\r\n            onChange={(e) => setInferenceText(e.target.value)}\r\n          />\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Input\r\n              type=\"file\"\r\n              onChange={(e) => setInferenceFile(e.target.files[0])}\r\n              className=\"hidden\"\r\n              id=\"file-upload\"\r\n            />\r\n            <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n              <Button variant=\"outline\" size=\"icon\">\r\n                Upload File\r\n              </Button>\r\n            </label>\r\n            <span>{inferenceFile ? inferenceFile.name : 'No file chosen'}</span>\r\n          </div>\r\n          <Button onClick={handleRunInference} disabled={loading}>\r\n            {loading ? 'Running Inference...' : 'Run Inference'}\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n      {output && (\r\n        <CardFooter>\r\n          <div className=\"w-full\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Output:</h3>\r\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto\">{output}</pre>\r\n          </div>\r\n        </CardFooter>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InferencePage;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport HomePage from '../components/HomePage';\r\nimport ManageReposPage from '../components/ManageReposPage';\r\nimport InferencePage from '../components/InferencePage';\r\nimport { Alert, AlertDescription } from './ui/alert';\r\nimport api from '../lib/api';\r\n\r\nconst UnusApp = ({ user }) => {\r\n  const [currentPage, setCurrentPage] = useState('home');\r\n  const [clonedRepos, setClonedRepos] = useState([]);\r\n  const [alert, setAlert] = useState({ show: false, message: '', type: 'default' });\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const showAlert = useCallback((message, type = 'default') => {\r\n    setAlert({ show: true, message, type });\r\n    setTimeout(() => setAlert({ show: false, message: '', type: 'default' }), 3000);\r\n  }, []);\r\n\r\n  const fetchClonedRepos = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.getClonedRepos();\r\n      setClonedRepos(response.data);\r\n    } catch (error) {\r\n      showAlert('Failed to fetch cloned repositories', 'destructive');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [showAlert]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchClonedRepos();\r\n    } else {\r\n      navigate('/login');\r\n    }\r\n  }, [user, fetchClonedRepos, navigate]);\r\n\r\n  const handleCloneRepo = useCallback(async (githubUrl) => {\r\n    try {\r\n      setLoading(true);\r\n      await api.cloneRepository(githubUrl);\r\n      await fetchClonedRepos();\r\n      showAlert('Repository cloned successfully', 'default');\r\n    } catch (error) {\r\n      showAlert('Failed to clone repository', 'destructive');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchClonedRepos, showAlert]);\r\n\r\n  const handleDeleteRepo = useCallback(async (repoName) => {\r\n    try {\r\n      setLoading(true);\r\n      await api.deleteRepo(repoName);\r\n      await fetchClonedRepos();\r\n      showAlert('Repository deleted successfully', 'default');\r\n    } catch (error) {\r\n      showAlert('Failed to delete repository', 'destructive');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchClonedRepos, showAlert]);\r\n\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    switch (currentPage) {\r\n      case 'home':\r\n        return <HomePage user={user} onCloneRepo={handleCloneRepo} />;\r\n      case 'manage-repos':\r\n        return <ManageReposPage repos={clonedRepos} onDeleteRepo={handleDeleteRepo} />;\r\n      case 'inference':\r\n        return <InferencePage repos={clonedRepos} showAlert={showAlert} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Header user={user} onChangePage={setCurrentPage} />\r\n      <main className=\"container mx-auto px-4 py-8\">\r\n        {alert.show && (\r\n          <Alert variant={alert.type} className=\"mb-4\">\r\n            <AlertDescription>{alert.message}</AlertDescription>\r\n          </Alert>\r\n        )}\r\n        {renderContent()}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnusApp;","import * as React from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport { cn } from '../../lib/utils'\r\n\r\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </h3>\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\n// PropTypes\r\nconst componentPropTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nCard.propTypes = componentPropTypes\r\nCardHeader.propTypes = componentPropTypes\r\nCardTitle.propTypes = componentPropTypes\r\nCardDescription.propTypes = componentPropTypes\r\nCardContent.propTypes = componentPropTypes\r\nCardFooter.propTypes = componentPropTypes\r\n\r\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter }\r\n","import * as React from \"react\"\r\nimport { cn } from '../../lib/utils'  // Adjust this path if necessary\r\n\r\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      className={cn(\r\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      aria-label={props['aria-label'] || props.placeholder || ''}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["_ref","user","onCloneRepo","githubUrl","setGithubUrl","useState","_jsxs","Card","className","children","_jsx","CardHeader","CardContent","Input","type","placeholder","value","onChange","e","target","Button","onClick","handleClone","test","repos","onDeleteRepo","length","map","repo","variant","size","Textarea","React","ref","props","cn","displayName","propTypes","PropTypes","showAlert","selectedRepo","setSelectedRepo","inferenceText","setInferenceText","inferenceFile","setInferenceFile","output","setOutput","loading","setLoading","checkTaskStatus","async","result","api","getTaskStatus","taskId","state","setTimeout","error","files","id","htmlFor","name","trim","textError","disabled","CardFooter","currentPage","setCurrentPage","clonedRepos","setClonedRepos","alert","setAlert","show","message","navigate","useNavigate","useCallback","arguments","undefined","fetchClonedRepos","response","data","useEffect","handleCloneRepo","handleDeleteRepo","deleteRepo","repoName","Header","onChangePage","Alert","AlertDescription","renderContent","HomePage","ManageReposPage","InferencePage","_ref2","CardTitle","_ref3","CardDescription","_ref4","_ref5","_ref6","componentPropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}