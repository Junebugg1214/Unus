{"version":3,"file":"static/js/474.cb6816b3.chunk.js","mappings":"kMAAO,SAASA,EAAKC,GAA0B,IAAzB,SAAEC,KAAaC,GAAOF,EACxC,OAAOG,EAAAA,EAAAA,KAAA,YAAWD,EAAKD,SAAGA,GAC5B,CCMF,MAsHA,EAtHwBD,IAAiC,IAAhC,KAAEI,EAAI,iBAAEC,GAAkBL,EACjD,MAAOM,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,gBAAiB,GACjBC,YAAa,GACbC,mBAAoB,MAEfC,EAASC,IAAcL,EAAAA,EAAAA,UAAS,CAAEM,KAAM,GAAIC,KAAM,MAClDC,EAAWC,IAAgBT,EAAAA,EAAAA,WAAS,GAErCU,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1Bf,GAAYgB,IAAQ,IAAUA,EAAU,CAACH,GAAOC,KAAS,EAiC3D,OACEG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,0BAAyBzB,SAAA,EACvCE,EAAAA,EAAAA,KAACwB,EAAAA,GAAU,CAAA1B,UACTE,EAAAA,EAAAA,KAAA,MAAIuB,UAAU,qBAAoBzB,SAAC,wBAErCuB,EAAAA,EAAAA,MAACI,EAAAA,GAAW,CAAA3B,SAAA,EACVuB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBzB,SAAA,EAC7BuB,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACEE,EAAAA,EAAAA,KAACJ,EAAK,CAAAE,SAAC,cACPE,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,wBAAuBzB,UAAM,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,WAAY,YAE1DL,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACEE,EAAAA,EAAAA,KAACJ,EAAK,CAAAE,SAAC,WACPE,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,wBAAuBzB,UAAM,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,QAAS,eAGzDN,EAAAA,EAAAA,MAAA,QAAMO,SAlCSC,UAInB,GAHAb,EAAEc,iBACFpB,EAAW,CAAEC,KAAM,GAAIC,KAAM,KAbzBT,EAASI,cAAgBJ,EAASK,oBACpCE,EAAW,CAAEC,KAAM,4BAA6BC,KAAM,UAC/C,KAELT,EAASI,YAAYwB,OAAS,KAChCrB,EAAW,CAAEC,KAAM,kDAAmDC,KAAM,UACrE,GAST,CAEAE,GAAa,GACb,UACQZ,EAAiBC,EAASG,gBAAiBH,EAASI,aAC1DG,EAAW,CAAEC,KAAM,gCAAiCC,KAAM,YAC1DR,EAAY,CAAEE,gBAAiB,GAAIC,YAAa,GAAIC,mBAAoB,IAC1E,CAAE,MAAOwB,GACPtB,EAAW,CAAEC,KAAMqB,EAAMvB,SAAW,4BAA6BG,KAAM,SACzE,CAAC,QACCE,GAAa,EACf,CAX2B,CAW3B,EAmBkCS,UAAU,YAAWzB,SAAA,EACjDuB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWzB,SAAA,EACxBE,EAAAA,EAAAA,KAACJ,EAAK,CAACqC,QAAQ,kBAAiBnC,SAAC,sBACjCE,EAAAA,EAAAA,KAACkC,EAAAA,EAAK,CACJC,GAAG,kBACHvB,KAAK,WACLK,KAAK,kBACLC,MAAOf,EAASG,gBAChB8B,SAAUrB,EACVsB,UAAQ,QAGZhB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWzB,SAAA,EACxBE,EAAAA,EAAAA,KAACJ,EAAK,CAACqC,QAAQ,cAAanC,SAAC,kBAC7BE,EAAAA,EAAAA,KAACkC,EAAAA,EAAK,CACJC,GAAG,cACHvB,KAAK,WACLK,KAAK,cACLC,MAAOf,EAASI,YAChB6B,SAAUrB,EACVsB,UAAQ,QAGZhB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWzB,SAAA,EACxBE,EAAAA,EAAAA,KAACJ,EAAK,CAACqC,QAAQ,qBAAoBnC,SAAC,0BACpCE,EAAAA,EAAAA,KAACkC,EAAAA,EAAK,CACJC,GAAG,qBACHvB,KAAK,WACLK,KAAK,qBACLC,MAAOf,EAASK,mBAChB4B,SAAUrB,EACVsB,UAAQ,cAKhBhB,EAAAA,EAAAA,MAACiB,EAAAA,GAAU,CAACf,UAAU,gBAAezB,SAAA,CAClCW,EAAQE,OACPX,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAACC,QAA0B,UAAjB/B,EAAQG,KAAmB,cAAgB,UAAWW,UAAU,cAAazB,UAC3FE,EAAAA,EAAAA,KAACyC,EAAAA,EAAgB,CAAA3C,SAAEW,EAAQE,UAG/BX,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,CAAC9B,KAAK,SAAS+B,SAAU9B,EAAWU,UAAU,SAAQzB,SAC1De,EAAY,cAAgB,yBAG5B,C,2IC9GX,MAAMS,EAAOsB,EAAAA,YAAiB,CAAA/C,EAA0BgD,KAAG,IAA5B,UAAEtB,KAAcxB,GAAOF,EAAA,OACpDG,EAAAA,EAAAA,KAAA,OACE6C,IAAKA,EACLtB,WAAWuB,EAAAA,EAAAA,IACT,2DACAvB,MAEExB,GACJ,IAEJuB,EAAKyB,YAAc,OAEnB,MAAMvB,EAAaoB,EAAAA,YAAiB,CAAAI,EAA0BH,KAAG,IAA5B,UAAEtB,KAAcxB,GAAOiD,EAAA,OAC1DhD,EAAAA,EAAAA,KAAA,OACE6C,IAAKA,EACLtB,WAAWuB,EAAAA,EAAAA,IAAG,gCAAiCvB,MAC3CxB,GACJ,IAEJyB,EAAWuB,YAAc,aAEzB,MAAME,EAAYL,EAAAA,YAAiB,CAAAM,EAAoCL,KAAG,IAAtC,UAAEtB,EAAS,SAAEzB,KAAaC,GAAOmD,EAAA,OACnElD,EAAAA,EAAAA,KAAA,MACE6C,IAAKA,EACLtB,WAAWuB,EAAAA,EAAAA,IACT,qDACAvB,MAEExB,EAAKD,SAERA,GACE,IAEPmD,EAAUF,YAAc,YAExB,MAAMI,EAAkBP,EAAAA,YAAiB,CAAAQ,EAA0BP,KAAG,IAA5B,UAAEtB,KAAcxB,GAAOqD,EAAA,OAC/DpD,EAAAA,EAAAA,KAAA,KACE6C,IAAKA,EACLtB,WAAWuB,EAAAA,EAAAA,IAAG,gCAAiCvB,MAC3CxB,GACJ,IAEJoD,EAAgBJ,YAAc,kBAE9B,MAAMtB,EAAcmB,EAAAA,YAAiB,CAAAS,EAA0BR,KAAG,IAA5B,UAAEtB,KAAcxB,GAAOsD,EAAA,OAC3DrD,EAAAA,EAAAA,KAAA,OAAK6C,IAAKA,EAAKtB,WAAWuB,EAAAA,EAAAA,IAAG,WAAYvB,MAAgBxB,GAAS,IAEpE0B,EAAYsB,YAAc,cAE1B,MAAMT,EAAaM,EAAAA,YAAiB,CAAAU,EAA0BT,KAAG,IAA5B,UAAEtB,KAAcxB,GAAOuD,EAAA,OAC1DtD,EAAAA,EAAAA,KAAA,OACE6C,IAAKA,EACLtB,WAAWuB,EAAAA,EAAAA,IAAG,6BAA8BvB,MACxCxB,GACJ,IAEJuC,EAAWS,YAAc,aAGzB,MAAMQ,EAAqB,CACzBhC,UAAWiC,IAAAA,OACX1D,SAAU0D,IAAAA,MAGZlC,EAAKmC,UAAYF,EACjB/B,EAAWiC,UAAYF,EACvBN,EAAUQ,UAAYF,EACtBJ,EAAgBM,UAAYF,EAC5B9B,EAAYgC,UAAYF,EACxBjB,EAAWmB,UAAYF,C,2ECtEvB,MAAMrB,EAAQU,EAAAA,YAAiB,CAAA/C,EAAgCgD,KAAS,IAAxC,UAAEtB,EAAS,KAAEX,KAASb,GAAOF,EAC3D,OACEG,EAAAA,EAAAA,KAAA,SACEY,KAAMA,EACNW,WAAWuB,EAAAA,EAAAA,IACT,+VACAvB,GAEFsB,IAAKA,EACL,aAAY9C,EAAM,eAAiBA,EAAM2D,aAAe,MACpD3D,GACJ,IAGNmC,EAAMa,YAAc,O,6BCRpB,IAAIY,EAAuBC,EAAQ,KAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKnE,EAAOoE,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIvD,KAAO,sBACLuD,CAPN,CAQF,CAEA,SAASE,IACP,OAAOR,CACT,CAHAA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASZ,EACTa,QAASrB,EACTsB,YAAatB,EACbuB,WAAYf,EACZgB,KAAMxB,EACNyB,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAepB,UAAYoB,EAEpBA,CACT,C,gBC/CEZ,EAAOC,QAAUL,EAAQ,IAARA,E,uBCNnBI,EAAOC,QAFoB,8C","sources":["components/ui/label.jsx","components/AccountSettings.jsx","components/ui/card.jsx","components/ui/input.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export function Label({ children, ...props }) {\r\n    return <label {...props}>{children}</label>\r\n  }","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Card, CardHeader, CardContent, CardFooter } from './ui/card';\r\nimport { Alert, AlertDescription } from './ui/alert';\r\nimport { Label } from './ui/label';\r\n\r\nconst AccountSettings = ({ user, onUpdatePassword }) => {\r\n  const [formData, setFormData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmNewPassword: ''\r\n  });\r\n  const [message, setMessage] = useState({ text: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (formData.newPassword !== formData.confirmNewPassword) {\r\n      setMessage({ text: \"New passwords don't match\", type: 'error' });\r\n      return false;\r\n    }\r\n    if (formData.newPassword.length < 8) {\r\n      setMessage({ text: \"New password must be at least 8 characters long\", type: 'error' });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage({ text: '', type: '' });\r\n\r\n    if (!validateForm()) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await onUpdatePassword(formData.currentPassword, formData.newPassword);\r\n      setMessage({ text: 'Password updated successfully', type: 'success' });\r\n      setFormData({ currentPassword: '', newPassword: '', confirmNewPassword: '' });\r\n    } catch (error) {\r\n      setMessage({ text: error.message || 'Failed to update password', type: 'error' });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-md mx-auto\">\r\n      <CardHeader>\r\n        <h2 className=\"text-2xl font-bold\">Account Settings</h2>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-2 mb-4\">\r\n          <div>\r\n            <Label>Username</Label>\r\n            <p className=\"text-sm text-gray-600\">{user?.username || 'N/A'}</p>\r\n          </div>\r\n          <div>\r\n            <Label>Email</Label>\r\n            <p className=\"text-sm text-gray-600\">{user?.email || 'N/A'}</p>\r\n          </div>\r\n        </div>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"currentPassword\">Current Password</Label>\r\n            <Input\r\n              id=\"currentPassword\"\r\n              type=\"password\"\r\n              name=\"currentPassword\"\r\n              value={formData.currentPassword}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"newPassword\">New Password</Label>\r\n            <Input\r\n              id=\"newPassword\"\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              value={formData.newPassword}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"confirmNewPassword\">Confirm New Password</Label>\r\n            <Input\r\n              id=\"confirmNewPassword\"\r\n              type=\"password\"\r\n              name=\"confirmNewPassword\"\r\n              value={formData.confirmNewPassword}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n      <CardFooter className=\"flex flex-col\">\r\n        {message.text && (\r\n          <Alert variant={message.type === 'error' ? 'destructive' : 'default'} className=\"mb-4 w-full\">\r\n            <AlertDescription>{message.text}</AlertDescription>\r\n          </Alert>\r\n        )}\r\n        <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\r\n          {isLoading ? 'Updating...' : 'Update Password'}\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountSettings.propTypes = {\r\n  user: PropTypes.shape({\r\n    username: PropTypes.string,\r\n    email: PropTypes.string\r\n  }),\r\n  onUpdatePassword: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AccountSettings;\r\n","import * as React from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport { cn } from '../../lib/utils'\r\n\r\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </h3>\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\n// PropTypes\r\nconst componentPropTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nCard.propTypes = componentPropTypes\r\nCardHeader.propTypes = componentPropTypes\r\nCardTitle.propTypes = componentPropTypes\r\nCardDescription.propTypes = componentPropTypes\r\nCardContent.propTypes = componentPropTypes\r\nCardFooter.propTypes = componentPropTypes\r\n\r\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter }\r\n","import * as React from \"react\"\r\nimport { cn } from '../../lib/utils'  // Adjust this path if necessary\r\n\r\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      className={cn(\r\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      aria-label={props['aria-label'] || props.placeholder || ''}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Label","_ref","children","props","_jsx","user","onUpdatePassword","formData","setFormData","useState","currentPassword","newPassword","confirmNewPassword","message","setMessage","text","type","isLoading","setIsLoading","handleChange","e","name","value","target","prevData","_jsxs","Card","className","CardHeader","CardContent","username","email","onSubmit","async","preventDefault","length","error","htmlFor","Input","id","onChange","required","CardFooter","Alert","variant","AlertDescription","Button","disabled","React","ref","cn","displayName","_ref2","CardTitle","_ref3","CardDescription","_ref4","_ref5","_ref6","componentPropTypes","PropTypes","propTypes","placeholder","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}