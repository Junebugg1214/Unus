version: '3.8'

services:
  app:
    image: mjsaintjour/unus:latest  # Use your Docker image here
    container_name: unus_app
    restart: always
    ports:
      - "80:80"  # Nginx serves the frontend and backend on port 80
    depends_on:
      - db
      - redis
    env_file:
      - .env  # Use a shared .env file for configuration
    volumes:
      - ./uploads:/app/uploads  # Persist uploads if needed
      - ./static:/app/static  # Persist static files if needed
    networks:
      - unus_network

  db:
    image: postgres:13
    container_name: unus_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Madou6282**
      POSTGRES_DB: unus_ai_bridge
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - unus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6
    container_name: unus_redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - unus_network

  celery_worker:
    image: mjsaintjour/unus:latest
    container_name: unus_celery
    restart: always
    command: celery -A app.celery worker --loglevel=info
    depends_on:
      - app
      - redis
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads  # Match with application volume paths
    networks:
      - unus_network
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  unus_network:






