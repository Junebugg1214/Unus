services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
    networks:
      - unus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf  # Updated volume path
    networks:
      - unus-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: unus
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - unus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    networks:
      - unus-network

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel=info
    environment:
      FLASK_ENV: production
      DATABASE_URL: postgresql://user:password@db:5432/unus
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - backend
      - redis
    volumes:
      - ./backend:/app
    networks:
      - unus-network
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  unus-network:

